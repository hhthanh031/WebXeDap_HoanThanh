@model Model.EF.ProductCategory

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Layouts.cshtml";
}

@section header{
    Thể loại
}

<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                Thêm mới thể loại
            </div>
            <div class="panel-body">
                <div class="row">
                    <div class="col-lg-6">
                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            <div class="form-group">
                                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-3" })
                                @Html.TextBoxFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })

                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.MetaTitle, htmlAttributes: new { @class = "control-label col-md-3" })

                                @Html.TextBoxFor(model => model.MetaTitle, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.MetaTitle, "", new { @class = "text-danger" })

                            </div>

                            @*<div class="form-group">
                                    @Html.LabelFor(model => model.ParentID, htmlAttributes: new { @class = "control-label col-md-3" })

                                    @Html.TextBoxFor(model => model.ParentID, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ParentID, "", new { @class = "text-danger" })

                                </div>*@

                            <div class="form-group">
                                @Html.LabelFor(model => model.DisplayOrder, htmlAttributes: new { @class = "control-label col-md-3" })

                                @Html.TextBoxFor(model => model.DisplayOrder, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DisplayOrder, "", new { @class = "text-danger" })

                            </div>

                            @*<div class="form-group">
                                    @Html.LabelFor(model => model.SeoTitle, htmlAttributes: new { @class = "control-label col-md-3" })

                                    @Html.TextBoxFor(model => model.SeoTitle, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.SeoTitle, "", new { @class = "text-danger" })

                                </div>*@

                            <div class="form-group">
                                @Html.LabelFor(model => model.CreateDate, htmlAttributes: new { @class = "control-label col-md-3" })

                                @Html.TextBoxFor(model => model.CreateDate, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CreateDate, "", new { @class = "text-danger" })

                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.CreateBy, htmlAttributes: new { @class = "control-label col-md-3" })

                                @Html.TextBoxFor(model => model.CreateBy, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CreateBy, "", new { @class = "text-danger" })

                            </div>

                            @*<div class="form-group">
                                    @Html.LabelFor(model => model.ModifiedDate, htmlAttributes: new { @class = "control-label col-md-3" })

                                    @Html.TextBoxFor(model => model.ModifiedDate, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ModifiedDate, "", new { @class = "text-danger" })

                                </div>*@

                            @*<div class="form-group">
                                    @Html.LabelFor(model => model.ModifiedBy, htmlAttributes: new { @class = "control-label col-md-3" })

                                    @Html.TextBoxFor(model => model.ModifiedBy, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ModifiedBy, "", new { @class = "text-danger" })

                                </div>*@

                            @*<div class="form-group">
                                    @Html.LabelFor(model => model.MetaKeywords, htmlAttributes: new { @class = "control-label col-md-3" })

                                    @Html.TextBoxFor(model => model.MetaKeywords, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.MetaKeywords, "", new { @class = "text-danger" })

                                </div>*@

                            @*<div class="form-group">
                                    @Html.LabelFor(model => model.MetaDescriptions, htmlAttributes: new { @class = "control-label col-md-3" })
                                    @Html.TextBoxFor(model => model.MetaDescriptions, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.MetaDescriptions, "", new { @class = "text-danger" })
                                </div>*@

                            <div class="form-group">
                                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-3" })
                                @Html.CheckBoxFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                            </div>

                            @*<div class="form-group">
                                    @Html.LabelFor(model => model.ShowOnHome, htmlAttributes: new { @class = "control-label col-md-3" })
                                    @Html.CheckBoxFor(model => model.ShowOnHome, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ShowOnHome, "", new { @class = "text-danger" })
                                </div>*@

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Lưu" class="btn btn-warning" />
                                </div>
                            </div>

                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



<div>
    <button type="button" class="btn btn-outline btn-default" style="color:black">
        @Html.ActionLink("Back to List", "Index")
    </button>
</div>
